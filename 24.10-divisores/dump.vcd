$date
	Tue Oct 29 17:46:03 2019
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module division_tb $end
$var wire 4 ! r [3:0] $end
$var wire 4 " q [3:0] $end
$var wire 1 # done $end
$var reg 4 $ D [3:0] $end
$var reg 1 % clk $end
$var reg 4 & d [3:0] $end
$var reg 1 ' rst $end
$var reg 1 ( start $end
$scope module div $end
$var wire 4 ) D [3:0] $end
$var wire 1 % clk $end
$var wire 4 * d [3:0] $end
$var wire 1 ' rst $end
$var wire 1 ( start $end
$var wire 4 + r [3:0] $end
$var wire 4 , q [3:0] $end
$var wire 1 # done $end
$var reg 4 - counter [3:0] $end
$var reg 8 . dividendo [7:0] $end
$var reg 4 / divisor [3:0] $end
$var reg 1 0 quociente $end
$var reg 4 1 resultado [3:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 1
00
b100 /
b0 .
b100 -
b0 ,
b0 +
b100 *
b100 )
0(
1'
b100 &
1%
b100 $
1#
b0 "
b0 !
$end
#10000
0%
#20000
1%
#21000
0'
#30000
0%
#40000
1%
#41000
1(
#50000
0%
#60000
b100 "
b100 ,
b100 .
0#
b0 -
1%
#61000
0(
#70000
0%
#80000
b1 1
b1000 "
b1000 ,
b1 -
b1000 .
1%
#90000
0%
#100000
b10 1
b0 "
b0 ,
b1 !
b1 +
b10000 .
b10 -
1%
#110000
0%
#120000
b0 1
10
b10 !
b10 +
b11 -
b100000 .
1%
#130000
0%
#140000
00
b1 "
b1 ,
b0 !
b0 +
b1 .
1#
b100 -
1%
#150000
0%
#160000
1%
